@model PengBugTracker.Models.Ticket

@{
    ViewBag.Title = "Edit";
}
    @*Work on this and uncomment when have time*@
    @*<meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/css/bootstrap.min.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/js/bootstrap.min.js"></script>*@


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.Created)
    @Html.HiddenFor(model => model.OwnerUserId)
    <div class="col-md-12">
        <div class="card ">
            <div class="card-header card-header-rose card-header-text">
                <div class="card-text">
                    <h4 class="card-title">Edit a Ticket</h4>
                </div>
            </div>
            <div class="card-body ">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })


                <div class="row">
                    @Html.LabelFor(model => model.ProjectId, "Project", htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                    <div class="col-sm-10">
                        <div class="form-group">
                            @Html.DropDownList("ProjectId", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.ProjectId, "", new { @class = "text-danger" })                            
                        </div>
                    </div>
                </div>
                <div class="row">
                    @*<label class="col-sm-2 col-form-label">Type</label>*@
                    @Html.LabelFor(model => model.TicketTypeId, "Type", htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                    <div class="col-sm-10">
                        <div class="form-group">
                            @*<input type="text" class="form-control">*@
                            @Html.DropDownList("TicketTypeId", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.TicketTypeId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    @*<label class="col-sm-2 col-form-label">Priority</label>*@
                    @Html.LabelFor(model => model.TicketPriorityId, "Priority", htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                    <div class="col-sm-10">
                        <div class="form-group">
                            @Html.DropDownList("TicketPriorityId", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.TicketPriorityId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                @if (User.IsInRole("Admin") || User.IsInRole("Manager"))
                {
                    <div class="row">
                        @*<label class="col-sm-2 col-form-label">Priority</label>*@
                        @Html.LabelFor(model => model.AssignedToUserId, "AssignedToUser", htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                        <div class="col-sm-10">
                            <div class="form-group">
                                @Html.DropDownList("AssignedToUserId", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.AssignedToUserId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                }
                <div class="row">
                    @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                    @*<label class="col-sm-2 col-form-label">Description</label>*@
                    <div class="col-sm-10">
                        <div class="form-group">
                            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })

                        </div>
                    </div>
                </div>
                <div class="row">
                    @*<label class="col-sm-2 col-form-label">Description</label>*@
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                    <div class="col-sm-10">
                        <div class="form-group">
                            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    @*<label class="col-sm-2 col-form-label">Priority</label>*@
                    @Html.LabelFor(model => model.TicketStatusId, "Ticket Status", htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                    <div class="col-sm-10">
                        <div class="form-group">
                            @Html.DropDownList("TicketStatusId", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.TicketStatusId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                
                <div class="col-md-10">
                    <div class="form-group">
                        <button type="submit" value="Create" class="btn btn-success">Save</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "MyIndex")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
