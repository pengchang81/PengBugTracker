@using PengBugTracker.Models
@model RegisterViewModel
@{
    ViewBag.Title = "Register";
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8" />
    <link rel="apple-touch-icon" sizes="76x76" href="~/img/apple-icon.png">
    <link rel="icon" type="image/png" href="~/img/favicon.png">
   
    <!--     Fonts and icons     -->
    <link rel="stylesheet" type="text/css" href="https://fonts.googleapis.com/css?family=Roboto:300,400,500,700|Roboto+Slab:400,700|Material+Icons" />
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/latest/css/font-awesome.min.css">

    <!-- CSS Files -->
    <link href="~/Content/css/material-dashboard.css?v=2.1.0" rel="stylesheet" />
    
    <!-- CSS Just for demo purpose, don't include it in your project -->
    <link href="~/Content/demo.css" rel="stylesheet" />
    
</head>

<body class="off-canvas-sidebar">
    <!-- Navbar -->
    <nav class="navbar navbar-expand-lg navbar-transparent navbar-absolute fixed-top text-white">
        <div class="container">

            <button class="navbar-toggler" type="button" data-toggle="collapse" aria-controls="navigation-index" aria-expanded="false" aria-label="Toggle navigation">
                <span class="sr-only">Toggle navigation</span>
                <span class="navbar-toggler-icon icon-bar"></span>
                <span class="navbar-toggler-icon icon-bar"></span>
                <span class="navbar-toggler-icon icon-bar"></span>
            </button>
            <div class="collapse navbar-collapse justify-content-end">
                <ul class="navbar-nav">
                    @*<li class="nav-item">
                        <a href="../dashboard.html" class="nav-link">
                            <i class="material-icons">dashboard</i> Dashboard
                        </a>
                    </li>*@
                    <li class="nav-item active">
                        <a href="#" class="nav-link">
                            <i class="material-icons">person_add</i> Register
                        </a>                        
                    </li>
                    <li class="nav-item">
                        <a href="@Url.Action("Login","Account")" class="nav-link">
                            <i class="material-icons">fingerprint</i> Login
                        </a>
                    </li>
                </ul>
            </div>
        </div>
    </nav>
    <!-- End Navbar -->
       
        <div class="wrapper wrapper-full-page">
            <div class="page-header register-page header-filter" filter-color="black" style="background-image: url('../img/bubbles-chemistry-close-up-color-220989.jpg')">   
                <div class="container">
                    <div class="row">
                        <div class="col-md-10 ml-auto mr-auto">
                            <div class="card card-signup">
                                <h2 class="card-title text-center">Register</h2>
                                <div class="card-body">
                                    <div class="row">
                                        <div class="col-md-5 ml-auto">
                                            <div class="info info-horizontal">
                                                <div class="icon icon-rose">
                                                    <i class="material-icons">timeline</i>
                                                </div>
                                                <div class="description">
                                                    <h4 class="info-title">Marketing</h4>
                                                    <p class="description">
                                                        We've created the marketing campaign of the website. It was a very interesting collaboration.
                                                    </p>
                                                </div>
                                            </div>
                                            <div class="info info-horizontal">
                                                <div class="icon icon-primary">
                                                    <i class="material-icons">code</i>
                                                </div>
                                                <div class="description">
                                                    <h4 class="info-title">Fully Coded in HTML5</h4>
                                                    <p class="description">
                                                        We've developed the website with HTML5 and CSS3. The client has access to the code using GitHub.
                                                    </p>
                                                </div>
                                            </div>
                                            <div class="info info-horizontal">
                                                <div class="icon icon-info">
                                                    <i class="material-icons">group</i>
                                                </div>
                                                <div class="description">
                                                    <h4 class="info-title">Built Audience</h4>
                                                    <p class="description">
                                                        There is also a Fully Customizable CMS Admin Dashboard for this product.
                                                    </p>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-5 mr-auto">
                                            <div class="social text-center">
                                                <button class="btn btn-just-icon btn-round btn-twitter">
                                                    <i class="fa fa-twitter"></i>
                                                </button>
                                                <button class="btn btn-just-icon btn-round btn-dribbble">
                                                    <i class="fa fa-dribbble"></i>
                                                </button>
                                                <button class="btn btn-just-icon btn-round btn-facebook">
                                                    <i class="fa fa-facebook"> </i>
                                                </button>

                                            </div>

                                            @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { role = "form", enctype = "Multipart/form-data" }))
                                            {
                                                @Html.AntiForgeryToken()
                                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                                                <div class="form" @*method=""*@>
                                                    <div class="form-group has-default">
                                                        <div class="input-group">
                                                            <div class="input-group-prepend">
                                                                <span class="input-group-text">
                                                                    <i class="material-icons">face</i>
                                                                </span>
                                                            </div>

                                                            @Html.TextBoxFor(m => m.FirstName, new { @Placeholder = "First Name", @class = "form-control input-lg" })
                                                            @Html.ValidationMessageFor(m => m.FirstName, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>
                                                    <div class="form-group has-default">
                                                        <div class="input-group">
                                                            <div class="input-group-prepend">
                                                                <span class="input-group-text">
                                                                    <i class="material-icons">face</i>
                                                                </span>
                                                            </div>
                                                            @Html.TextBoxFor(m => m.LastName, new { @Placeholder = "Last Name", @class = "form-control input-lg" })
                                                            @Html.ValidationMessageFor(m => m.LastName, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>
                                                    <div class="form-group has-default">
                                                        <div class="input-group">
                                                            <div class="input-group-prepend">
                                                                <span class="input-group-text">
                                                                    <i class="material-icons">mail</i>
                                                                </span>
                                                            </div>
                                                            @*<input type="text" class="form-control" placeholder="Email...">*@
                                                            @Html.TextBoxFor(m => m.Email, new { @Placeholder = "Email", @class = "form-control input-lg" })
                                                            @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>
                                                    <div class="form-group has-default">
                                                        <div class="input-group">
                                                            <div class="input-group-prepend">
                                                                <span class="input-group-text">
                                                                    <i class="material-icons">lock_outline</i>
                                                                </span>
                                                            </div>
                                                            @*<input type="password" placeholder="Password..." class="form-control">*@
                                                            @Html.PasswordFor(m => m.Password, new { @Placeholder = "Password", @class = "form-control input-lg" })
                                                            @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>
                                                    <div class="form-group has-default">
                                                        <div class="input-group">
                                                            <div class="input-group-prepend">
                                                                <span class="input-group-text">
                                                                    <i class="material-icons">lock_outline</i>
                                                                </span>
                                                            </div>
                                                            @*<input type="password" placeholder="Confirm Password..." class="form-control">*@
                                                            @Html.PasswordFor(m => m.ConfirmPassword, new { @Placeholder = "Confirm Password", @class = "form-control input-lg" })
                                                            @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>
                                                    <div class="form-group">
                                                        <div class="input-group" id="profilebox">
                                                            <div class="input-group-prepend">
                                                                <span class="input-group-text">
                                                                    <i class="material-icons">lock_outline</i>
                                                                </span>
                                                            </div>
                                                            <input type="file" name="image" class="form-control" id="fileUpload" />
                                                            @Html.TextBox("Avatar", null, new {type = "file" })
                                                        </div>
                                                    </div>
                                                    <div class="text-center">
                                                        <button type="submit" onclick="location.href='@Url.Action("Dashboard","Home")'" class="btn signBtn btn-block">Sign Up</button>
                                                        @*<a href="@Url.Action("Dashboard", "Home")" class="btn btn-primary btn-round mt-4">Submit</a>*@
                                                    </div>
                                                </div>
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <footer class="footer">
                    <div class="container">
                        <div class="copyright text-center">
                            &copy;
                            <script>document.write(new Date().getFullYear())</script> made by Peng Chang

                        </div>
                    </div>
                </footer>
            </div>
        </div>
    <!--   Core JS Files   -->
    <script src="~/Scripts/js/core/jquery.min.js"></script>
    <script src="~/Scripts/js/core/popper.min.js"></script>
    <script src="~/Scripts/js/core/bootstrap-material-design.min.js"></script>
    <script src="~/Scripts/js/plugins/perfect-scrollbar.jquery.min.js"></script>


    <!--  Google Maps Plugin    -->
    <script src="https://maps.googleapis.com/maps/api/js?key=YOUR_KEY_HERE"></script>


    <!-- Chartist JS -->
    <script src="~/Scripts/js/plugins/chartist.min.js"></script>

    <!--  Notifications Plugin    -->
    <script src="~/Scripts/js/plugins/bootstrap-notify.js"></script>


    <!-- Control Center for Material Dashboard: parallax effects, scripts for the example pages etc -->
    <script src="~/Scripts/js/material-dashboard.js?v=2.1.0" type="text/javascript"></script>


    <!-- Material Dashboard DEMO methods, don't include it in your project! -->
    <script src="~/Scripts/demo.js"></script>

    <script>
    $(document).ready(function () {
            $().ready(function () {
                $sidebar = $('.sidebar');

                $sidebar_img_container = $sidebar.find('.sidebar-background');

                $full_page = $('.full-page');

                $sidebar_responsive = $('body > .navbar-collapse');

                window_width = $(window).width();

                fixed_plugin_open = $('.sidebar .sidebar-wrapper .nav li.active a p').html();

                if (window_width > 767 && fixed_plugin_open == 'Dashboard') {
                    if ($('.fixed-plugin .dropdown').hasClass('show-dropdown')) {
                        $('.fixed-plugin .dropdown').addClass('open');
                    }
                }

                $('.fixed-plugin a').click(function (event) {
                    // Alex if we click on switch, stop propagation of the event, so the dropdown will not be hide, otherwise we set the  section active
                    if ($(this).hasClass('switch-trigger')) {
                        if (event.stopPropagation) {
                            event.stopPropagation();
                        } else if (window.event) {
                            window.event.cancelBubble = true;
                        }
                    }
                });

                $('.fixed-plugin .active-color span').click(function () {
                    $full_page_background = $('.full-page-background');

                    $(this).siblings().removeClass('active');
                    $(this).addClass('active');

                    var new_color = $(this).data('color');

                    if ($sidebar.length != 0) {
                        $sidebar.attr('data-color', new_color);
                    }

                    if ($full_page.length != 0) {
                        $full_page.attr('filter-color', new_color);
                    }

                    if ($sidebar_responsive.length != 0) {
                        $sidebar_responsive.attr('data-color', new_color);
                    }
                });

                $('.fixed-plugin .background-color .badge').click(function () {
                    $(this).siblings().removeClass('active');
                    $(this).addClass('active');

                    var new_color = $(this).data('background-color');

                    if ($sidebar.length != 0) {
                        $sidebar.attr('data-background-color', new_color);
                    }
                });

                $('.fixed-plugin .img-holder').click(function () {
                    $full_page_background = $('.full-page-background');

                    $(this).parent('li').siblings().removeClass('active');
                    $(this).parent('li').addClass('active');


                    var new_image = $(this).find("img").attr('src');

                    if ($sidebar_img_container.length != 0 && $('.switch-sidebar-image input:checked').length != 0) {
                        $sidebar_img_container.fadeOut('fast', function () {
                            $sidebar_img_container.css('background-image', 'url("' + new_image + '")');
                            $sidebar_img_container.fadeIn('fast');
                        });
                    }

                    if ($full_page_background.length != 0 && $('.switch-sidebar-image input:checked').length != 0) {
                        var new_image_full_page = $('.fixed-plugin li.active .img-holder').find('img').data('src');

                        $full_page_background.fadeOut('fast', function () {
                            $full_page_background.css('background-image', 'url("' + new_image_full_page + '")');
                            $full_page_background.fadeIn('fast');
                        });
                    }

                    if ($('.switch-sidebar-image input:checked').length == 0) {
                        var new_image = $('.fixed-plugin li.active .img-holder').find("img").attr('src');
                        var new_image_full_page = $('.fixed-plugin li.active .img-holder').find('img').data('src');

                        $sidebar_img_container.css('background-image', 'url("' + new_image + '")');
                        $full_page_background.css('background-image', 'url("' + new_image_full_page + '")');
                    }

                    if ($sidebar_responsive.length != 0) {
                        $sidebar_responsive.css('background-image', 'url("' + new_image + '")');
                    }
                });

                $('.switch-sidebar-image input').change(function () {
                    $full_page_background = $('.full-page-background');

                    $input = $(this);

                    if ($input.is(':checked')) {
                        if ($sidebar_img_container.length != 0) {
                            $sidebar_img_container.fadeIn('fast');
                            $sidebar.attr('data-image', '#');
                        }

                        if ($full_page_background.length != 0) {
                            $full_page_background.fadeIn('fast');
                            $full_page.attr('data-image', '#');
                        }

                        background_image = true;
                    } else {
                        if ($sidebar_img_container.length != 0) {
                            $sidebar.removeAttr('data-image');
                            $sidebar_img_container.fadeOut('fast');
                        }

                        if ($full_page_background.length != 0) {
                            $full_page.removeAttr('data-image', '#');
                            $full_page_background.fadeOut('fast');
                        }

                        background_image = false;
                    }
                });

                $('.switch-sidebar-mini input').change(function () {
                    $body = $('body');

                    $input = $(this);

                    if (md.misc.sidebar_mini_active == true) {
                        $('body').removeClass('sidebar-mini');
                        md.misc.sidebar_mini_active = false;

                        $('.sidebar .sidebar-wrapper, .main-panel').perfectScrollbar();

                    } else {

                        $('.sidebar .sidebar-wrapper, .main-panel').perfectScrollbar('destroy');

                        setTimeout(function () {
                            $('body').addClass('sidebar-mini');

                            md.misc.sidebar_mini_active = true;
                        }, 300);
                    }

                    // we simulate the window Resize so the charts will get updated in realtime.
                    var simulateWindowResize = setInterval(function () {
                        window.dispatchEvent(new Event('resize'));
                    }, 180);

                    // we stop the simulation of Window Resize after the animations are completed
                    setTimeout(function () {
                        clearInterval(simulateWindowResize);
                    }, 1000);

                });
            });
        });</script>
    <script>
    $(document).ready(function () {
            md.checkFullPageBackgroundImage();
        });</script>
</body>

</html>